/*
MIXINS
---------------------------------------------------------------------------------------------------- */

/* Colours
--------------------------------------------- */

/* White */
$color-white: #ffffff;
$color-black_rgb: rgb(255, 255, 255) ; /* White */

/* Black */
$color-black: #000000; /* Black */
$color-black_rgb: rgb(0, 0, 0) ; /* Black */

/* Primary One (Cyan) */
$color-primary-one: #00aeef; /* 100% Cyan */
$color-primary-one_rgb: rgb(0, 174, 239) ; /* Cyan */

/* Typography
--------------------------------------------- */

/* Primary Font Faminly */
$font-sans: 'Lato, sans-serif;
$font-headlines: 'Lato, sans-serif;

/* Basic Font Sizes mixin */
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@mixin line-height($lineheight: 1.6) {
  line-height:($lineheight * 10) + px;
  line-height:$lineheight + rem;
}

@mixin font($fontsize: 1.6, $lineheight: 1.6) {
  font-size: ($fontsize * 10) + px;
  font-size: $fontsize + rem;
  line-height:($lineheight * 10) + px;
  line-height:$lineheight + rem;
}

p.standard {
	@include font(1.8, 2.6);
}

/* Border Radius
--------------------------------------------- */

@mixin corners($radius){
	-webkit-border-radius: $radius + px;
	   -moz-border-radius: $radius + px;
			border-radius: $radius + px;
}

/* Gradients
--------------------------------------------- */

@mixin linear-gradient($from, $to) {
	/* Fallback for sad browsers */
	background-color: $to;
	/* Mozilla Firefox */
	background-image:-moz-linear-gradient($from, $to);
	/* Opera */
	background-image:-o-linear-gradient($from, $to);
	/* WebKit (Safari 4+, Chrome 1+) */
	background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1, $to));
	/* WebKit (Chrome 11+) */
	background-image: -webkit-linear-gradient($from, $to);
	/* IE10 */
	background-image: -ms-linear-gradient($from, $to);
	/* W3C */
	background-image: linear-gradient($from, $to);
}

/* Grid
--------------------------------------------- */

/* Grid mixin */
@mixin grid($colls, $margin, $target) {
  width: ((($target - (($colls - 1) * $margin)) / $colls) / $target) * 100%;
  &:nth-child(n) {
    margin-right: (($margin / $target) * 100%);
  }
  &:nth-child(#{$colls}n) {
    margin-right: 0;
  }
}

@mixin structure($width, $target) {
	width: ($width / $target * 100%);
}